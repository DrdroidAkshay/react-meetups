{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Work\\\\Next Projects\\\\react-meetups\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nvar meetUpDetail = function meetUpDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    img: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default meetUpDetail;","map":{"version":3,"sources":["D:/Work/Next Projects/react-meetups/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","meetUpDetail","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,sBACE,QAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;;AAwDA,eAAeN,YAAf","sourcesContent":["import React from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nconst meetUpDetail = (props) => {\r\n  return (\r\n    <MeetupDetails\r\n      img={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Akshay:Akshay123@cluster0.sew4n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const meetups = await meetupCollections.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Akshay:Akshay123@cluster0.sew4n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupCollections.findOne({ _id: meetupId });\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\nexport default meetUpDetail;\r\n"]},"metadata":{},"sourceType":"module"}